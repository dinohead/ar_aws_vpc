---

# Build private dictionary of Security groups because the
# ec2_groups module doesn't support the omit filter for rules
- set_fact:
    aws_vpc_group_priv: []

- set_fact:
    temp_dict:
      proto: "{{ item.proto }}"
      ports: "{{ item.ports | default( omit ) }}"
      from_port: "{{ item.from_port | default( omit ) }}"
      to_port: "{{ item.to_port | default( omit ) }}"
      cidr_ip: "{{ item.cidr_ip }}"
      cidr_ipv6: "{{ item.cidr_ipv6 | default( omit ) }}"
  loop: "{{ aws_vpc_groups }}"
  register: task_result

- set_fact:
    aws_vpc_group_priv: "{{ aws_vpc_group_priv + [{
      'group_name': item.item.group_name,
      'group_desc': ( item.item.group_desc | default(item.item.group_name)) ,
      'rules': [ item.ansible_facts.temp_dict ]
    }] }}"
  loop: "{{ task_result.results }}"

- name: Create Security Groups
  ec2_group:
    state: present
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    region: "{{ aws_vpc_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    name:  "{{ item.group_name }}"
    description: "{{ item.group_desc }}"
    tags:
      Name: "{{ aws_vpc_name + '_sg_' + item.group_name }}"
    rules: "{{ item.rules }}"
  loop: "{{ aws_vpc_group_priv }}"

- name: Find the default Security Group
  ec2_group_facts:
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    region: "{{ aws_vpc_region }}"
    filters:
      vpc_id: "{{ aws_vpc_id }}"
      group_name: 'default'
  register: task_result

- name: Tag the default security group
  ec2_tag:
    state: present
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    region: "{{ aws_vpc_region }}"
    resource: "{{ task_result.security_groups[0].group_id }}"
    tags:
      'Name': "{{ aws_vpc_name + '_sg_default' }}"
