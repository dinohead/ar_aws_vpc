---

#TODO Unhardcode me
- name: Ensure Subnet route tables exist (private)
  ec2_vpc_route_table:
    state: present
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    region: "{{ aws_vpc_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    tags:
      'Name': "{{ aws_vpc_name + '_' + item.name + '_subnet'  + '_routes' }}"
    subnets:
      - '{{ item.cidr }}'
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ aws_vpc_nat_id }}"
      - dest: 172.16.0.0/16
        gateway_id: "{{ aws_vpc_transit_gateway_id }}"
      - dest: 172.17.0.0/16
        gateway_id: "{{ aws_vpc_transit_gateway_id }}"
      - dest: 10.50.0.0/16
        gateway_id: "{{ aws_vpc_transit_gateway_id }}"
      - dest: 10.51.0.0/16
        gateway_id: "{{ aws_vpc_transit_gateway_id }}"
      - dest: 192.168.0.0/16
        gateway_id: "{{ aws_vpc_transit_gateway_id }}"
  loop: "{{ aws_vpc_subnets }}"
  when: not item.public

#TODO Unhardcode me
- name: Ensure Subnet route tables exist (public)
  ec2_vpc_route_table:
    state: present
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    region: "{{ aws_vpc_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    tags:
      'Name': "{{ aws_vpc_name + '_' + item.name + '_subnet'  + '_routes' }}"
    subnets:
      - '{{ item.cidr }}'
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ aws_vpc_igw_id }}"
  loop: "{{ aws_vpc_subnets }}"
  when: item.public

- name: Find the main route table
  ec2_vpc_route_table_facts:
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    region: "{{ aws_vpc_region }}"
    filters:
      vpc_id: "{{ aws_vpc_id }}"
      "association.main": "true"
  register: task_result
  delegate_to: localhost

- debug:
    var: task_result

- set_fact:
    aws_vpc_main_route_id: "{{ task_result.route_tables[0].id }}"

- debug:
    var: aws_vpc_main_route_id

- name: Tag the main route table
  ec2_tag:
    state: present
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    region: "{{ aws_vpc_region }}"
    resource: "{{ aws_vpc_main_route_id }}"
    tags:
      'Name': "{{ aws_vpc_name + '_main_routes' }}"
