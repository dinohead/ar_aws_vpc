---

- name: Ensure Subnets exist
  ec2_vpc_subnet:
    assign_instances_ipv6: "{{ item.ipv6 | default( false ) }}"
    aws_access_key: "{{ aws_vpc_aws_access_key }}"
    aws_secret_key: "{{ aws_vpc_aws_secret_key }}"
    az: "{{ item.az | default( omit ) }}"
    cidr: "{{ item.cidr }}"
    ipv6_cidr: "{{ item.ipv6_cidr | default( omit ) }}"
    map_public: "{{ item.map_public | default( false ) }}"
    purge_tags: "{{ item.purge_tags | default( true ) }}"
    region: "{{ item.region | default( aws_vpc_reigon ) }}"
    state: present
    tags: "{{ item.tags | default( {} ) | combine ( {'Name': aws_vpc_name + '_' + item.name + '_subnet' }) }}"
    vpc_id: "{{ aws_vpc_id }}"
    wait: true
  loop: "{{ aws_vpc_subnets }}"
  register: task_result

# Build a new subnet list of dictionaries with the subnet ids
- set_fact:
    aws_vpc_subnets: []

- set_fact:
    aws_vpc_subnets: "{{ aws_vpc_subnets + [ item.item | combine( {'subnet_id': item.subnet.id}) ] }}"
  loop: "{{ task_result.results }}"

- debug:
    var: aws_vpc_subnets
    verbosity: 0

- set_fact:
    aws_vpc_public_subnet_id: "{{ (aws_vpc_subnets | selectattr('public', 'equalto', true ) | list | first).subnet_id }}"

- set_fact:
    aws_vpc_public_subnets: "{{ (aws_vpc_subnets | selectattr('public', 'equalto', true ) | list) }}"

- set_fact:
    aws_vpc_public_subnet_ids: "{{ aws_vpc_public_subnets | map(attribute='subnet_id') | list }}"

- debug:
    var: aws_vpc_public_subnet_id
    verbosity: 0

- debug:
    var: aws_vpc_public_subnets
    verbosity: 0

- debug:
    var: aws_vpc_public_subnet_ids
    verbosity: 0

# don't check for private, true.  Instead, check for public false.

- set_fact:
    aws_vpc_private_subnet_id: "{{ (aws_vpc_subnets | selectattr('public', 'equalto', false ) | list | first).subnet_id }}"

- set_fact:
    aws_vpc_private_subnets: "{{ (aws_vpc_subnets | selectattr('public', 'equalto', false ) | list) }}"

- set_fact:
    aws_vpc_private_subnet_ids: "{{ aws_vpc_private_subnets | map(attribute='subnet_id') | list }}"

- debug:
    var: aws_vpc_private_subnet_id
    verbosity: 0

- debug:
    var: aws_vpc_private_subnets
    verbosity: 0

- debug:
    var: aws_vpc_private_subnet_ids
    verbosity: 0
